package drooldsample

import org.eclipse.smarthome.core.items.Item;
import org.eclipse.smarthome.core.library.types.OnOffType;
import org.eclipse.smarthome.core.library.types.OpenClosedType;
import org.eclipse.smarthome.core.types.Command;
import org.eclipse.smarthome.core.types.State;
import com.incquerylabs.iot.droolsbundle.EventBusSubscriber.ItemReceivedCommand;
import com.incquerylabs.iot.droolsbundle.EventBusSubscriber.ItemStateChanged;
import com.incquerylabs.iot.eshieventbusservice.IEventBusService;

global IEventBusService openhab;


declare ItemReceivedCommand
    @role ( event )
end


declare ItemStateChanged
    @role ( event )
end

declare ManualSwitchON
    @role ( event )

    itemName : String @key
end

declare Status
    @role ( event )
    
    itemName : String @key
    status : State @key
    manual : boolean = false
end


/*
rule "Item received command"
    when
        itemCmd : ItemReceivedCommand( itemName == "Light_FF_Bed_Ceiling", command == OnOffType.ON)
    then
        System.out.println( "IncQuery droolsbundle: item " + itemCmd.getItemName() + " received command: " + itemCmd.getCommand());
        openhab.postCommand("Heating_FF_Bed", OnOffType.ON);
end
*/

rule "Item state changed"
    when
        itemState : ItemStateChanged( itemName : itemName, newState : newState, oldState : oldState)
    then
        System.out.println( "IncQuery droolsbundle: item " + itemName + " state changed from: " + oldState + " to: " + newState);
        insert(new Status( itemName, newState ));
end


rule "Status updated"
    when
        s : Status(itemName : itemName, status : status)
    then
        System.out.println( "IncQuery droolsbundle: item " + itemName + " status updated to: " + status);
end


rule "Example Lights On"
    when
        $status : Status( itemName == "Light_FF_Bed_Ceiling", status == OnOffType.OFF)
        not( Status(this after $status,  itemName == "Light_FF_Bed_Ceiling", status == OnOffType.ON) )
        itemState : ItemStateChanged( 
        (itemName == "Heating_FF_Bed" && newState == OnOffType.ON) || 
        (itemName == "Heating_FF_Office" && newState == OnOffType.ON) )
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());
        openhab.postCommand("Light_FF_Bed_Ceiling", OnOffType.ON);
end

rule "Example Lights Off"
    when
        $status : Status( itemName == "Light_FF_Bed_Ceiling", status == OnOffType.ON)
        not( Status(this after $status,  itemName == "Light_FF_Bed_Ceiling", status == OnOffType.OFF) )
        itemState : ItemStateChanged( itemName == "Heating_FF_Bed", newState == OnOffType.ON, oldState : oldState)
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());
        openhab.postCommand("Light_FF_Bed_Ceiling", OnOffType.OFF);
end

rule "A Lights Switch On"
    when
        $status : Status( itemName == "A_Lights", status == OnOffType.OFF)
        not( Status(this after $status,  itemName == "A_Lights", status == OnOffType.ON) )

        itemState : ItemStateChanged( 
        (itemName == "A_Light_Switch_Dimmer_1_Up" && newState == OpenClosedType.OPEN) || 
        (itemName == "A_Light_Switch_Dimmer_2_Up" && newState == OpenClosedType.OPEN) || 
        (itemName == "A_Light_Switch_Dimmer_3_Up" && newState == OpenClosedType.OPEN) )
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());
        openhab.postCommand("A_Lights", OnOffType.ON);
end

rule "A Lights Switch Off"
    when
        $status : Status( itemName == "A_Lights", status == OnOffType.ON)
        not( Status(this after $status,  itemName == "A_Lights", status == OnOffType.OFF) )

        itemState : ItemStateChanged( 
        (itemName == "A_Light_Switch_Dimmer_1_Down" && newState == OpenClosedType.OPEN) || 
        (itemName == "A_Light_Switch_Dimmer_2_Down" && newState == OpenClosedType.OPEN) || 
        (itemName == "A_Light_Switch_Dimmer_3_Down" && newState == OpenClosedType.OPEN) )
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());
        openhab.postCommand("A_Lights", OnOffType.OFF);
end


rule "A Lights Motion On"
    when
        $statusLights : Status( itemName == "A_Lights", status == OnOffType.OFF)
        not( Status(this after $statusLights,  itemName == "A_Lights", status == OnOffType.ON) )

        $statusBrigthnessSensor : Status( itemName == "A_Brightness_Sensor", status == OpenClosedType.OPEN)
        not( Status(this after $statusBrigthnessSensor,  itemName == "A_Brightness_Sensor", status == OpenClosedType.CLOSED) )

        itemState : ItemStateChanged( itemName == "A_Motion_Detector", newState == OpenClosedType.OPEN)
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());
        openhab.postCommand("A_Lights", OnOffType.ON);
end


rule "A Lights Motion Off"
    when
        $statusLights : Status( itemName == "A_Lights", status == OnOffType.ON)
        not( Status(this after $statusLights,  itemName == "A_Lights", status == OnOffType.OFF) )

        $motion : ItemStateChanged(itemName == "A_Motion_Detector", newState == OpenClosedType.CLOSED)
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());
        openhab.postCommand("A_Lights", OnOffType.OFF);
end


rule "A RollerShades 1 Up On"
    when
        $statusUp : Status( itemName == "A_Roller_Shades_1_Up", status == OnOffType.OFF)
        not( Status(this after $statusUp,  itemName == "A_Roller_Shades_1_Up", status == OnOffType.ON) )

        $statusDown : Status( itemName == "A_Roller_Shades_1_Down", status == OnOffType.ON)
        not( Status(this after $statusDown,  itemName == "A_Roller_Shades_1_Down", status == OnOffType.OFF) )

        itemState : ItemStateChanged( (itemName == "A_Up_Down_Switch_1_Up" && newState == OpenClosedType.OPEN) )
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());
        openhab.postCommand("A_Roller_Shades_1_Up", OnOffType.ON);
        openhab.postCommand("A_Roller_Shades_2_Up", OnOffType.ON);
end

rule "A RollerShades 1 Up Off"
    when
        $statusUp : Status( itemName == "A_Roller_Shades_1_Up", status == OnOffType.OFF)
        not( Status(this after $statusUp,  itemName == "A_Roller_Shades_1_Up", status == OnOffType.ON) )

        $statusDown : Status( itemName == "A_Roller_Shades_1_Down", status == OnOffType.ON)
        not( Status(this after $statusDown,  itemName == "A_Roller_Shades_1_Down", status == OnOffType.OFF) )

        itemState : ItemStateChanged( (itemName == "A_Up_Down_Switch_1_Down" && newState == OpenClosedType.OPEN) )
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());
        openhab.postCommand("A_Roller_Shades_1_Up", OnOffType.OFF);
        openhab.postCommand("A_Roller_Shades_2_Up", OnOffType.OFF);
end


rule "A RollerShades 1 Down On"
    when
        $statusDown : Status( itemName == "A_Roller_Shades_1_Down", status == OnOffType.OFF)
        not( Status(this after $statusDown,  itemName == "A_Roller_Shades_1_Down", status == OnOffType.ON) )

        $statusUp : Status( itemName == "A_Roller_Shades_1_Up", status == OnOffType.ON)
        not( Status(this after $statusUp,  itemName == "A_Roller_Shades_1_Up", status == OnOffType.OFF) )

        itemState : ItemStateChanged( (itemName == "A_Up_Down_Switch_1_Down" && newState == OpenClosedType.OPEN) )
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());
        openhab.postCommand("A_Roller_Shades_1_Down", OnOffType.ON);
        openhab.postCommand("A_Roller_Shades_2_Down", OnOffType.ON);
end

rule "A RollerShades 1 Down Off"
    when
        $statusDown : Status( itemName == "A_Roller_Shades_1_Down", status == OnOffType.OFF)
        not( Status(this after $statusDown,  itemName == "A_Roller_Shades_1_Down", status == OnOffType.ON) )

        $statusUp : Status( itemName == "A_Roller_Shades_1_Up", status == OnOffType.ON)
        not( Status(this after $statusUp,  itemName == "A_Roller_Shades_1_Up", status == OnOffType.OFF) )

        itemState : ItemStateChanged( (itemName == "A_Up_Down_Switch_1_Up" && newState == OpenClosedType.OPEN) )
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());
        openhab.postCommand("A_Roller_Shades_1_Down", OnOffType.OFF);
        openhab.postCommand("A_Roller_Shades_2_Down", OnOffType.OFF);
end


rule "A RollerShades 2 Up On"
    when
        $statusUp : Status( itemName == "A_Roller_Shades_3_Up", status == OnOffType.OFF)
        not( Status(this after $statusUp,  itemName == "A_Roller_Shades_3_Up", status == OnOffType.ON) )

        $statusDown : Status( itemName == "A_Roller_Shades_3_Down", status == OnOffType.ON)
        not( Status(this after $statusDown,  itemName == "A_Roller_Shades_3_Down", status == OnOffType.OFF) )

        itemState : ItemStateChanged( (itemName == "A_Up_Down_Switch_2_Up" && newState == OpenClosedType.OPEN) )
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());
        openhab.postCommand("A_Roller_Shades_3_Up", OnOffType.ON);
        openhab.postCommand("A_Roller_Shades_4_Up", OnOffType.ON);
end

rule "A RollerShades 2 Up Off"
    when
        $statusUp : Status( itemName == "A_Roller_Shades_3_Up", status == OnOffType.OFF)
        not( Status(this after $statusUp,  itemName == "A_Roller_Shades_3_Up", status == OnOffType.ON) )

        $statusDown : Status( itemName == "A_Roller_Shades_3_Down", status == OnOffType.ON)
        not( Status(this after $statusDown,  itemName == "A_Roller_Shades_3_Down", status == OnOffType.OFF) )

        itemState : ItemStateChanged( (itemName == "A_Up_Down_Switch_2_Down" && newState == OpenClosedType.OPEN) )
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());
        openhab.postCommand("A_Roller_Shades_3_Up", OnOffType.OFF);
        openhab.postCommand("A_Roller_Shades_4_Up", OnOffType.OFF);
end


rule "A RollerShades 2 Down On"
    when
        $statusDown : Status( itemName == "A_Roller_Shades_3_Down", status == OnOffType.OFF)
        not( Status(this after $statusDown,  itemName == "A_Roller_Shades_3_Down", status == OnOffType.ON) )

        $statusUp : Status( itemName == "A_Roller_Shades_3_Up", status == OnOffType.ON)
        not( Status(this after $statusUp,  itemName == "A_Roller_Shades_3_Up", status == OnOffType.OFF) )

        itemState : ItemStateChanged( (itemName == "A_Up_Down_Switch_2_Down" && newState == OpenClosedType.OPEN) )
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());
        openhab.postCommand("A_Roller_Shades_3_Down", OnOffType.ON);
        openhab.postCommand("A_Roller_Shades_4_Down", OnOffType.ON);
end

rule "A RollerShades 2 Down Off"
    when
        $statusDown : Status( itemName == "A_Roller_Shades_3_Down", status == OnOffType.OFF)
        not( Status(this after $statusDown,  itemName == "A_Roller_Shades_3_Down", status == OnOffType.ON) )

        $statusUp : Status( itemName == "A_Roller_Shades_3_Up", status == OnOffType.ON)
        not( Status(this after $statusUp,  itemName == "A_Roller_Shades_3_Up", status == OnOffType.OFF) )

        itemState : ItemStateChanged( (itemName == "A_Up_Down_Switch_2_Up" && newState == OpenClosedType.OPEN) )
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());
        openhab.postCommand("A_Roller_Shades_3_Down", OnOffType.OFF);
        openhab.postCommand("A_Roller_Shades_4_Down", OnOffType.OFF);
end

/*
rule "A RollerShades 2"
    when
        Status( itemName == "A_Roller_Shades_3_Up", $statusUp : status)
        Status( itemName == "A_Roller_Shades_3_Down", $statusDown : status)

        itemState : ItemStateChanged( (itemName == "A_Up_Down_Switch_2_Up" && newState == OpenClosedType.OPEN) || (itemName == "A_Up_Down_Switch_2_Down" && newState == OpenClosedType.OPEN) )
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());

        if(itemState.getItemName() == "A_Up_Down_Switch_2_Up") {
            if( $statusUp == OnOffType.OFF && $statusDown == OnOffType.OFF) {
                openhab.postCommand("A_Roller_Shades_3_Up", OnOffType.ON);
                openhab.postCommand("A_Roller_Shades_4_Up", OnOffType.ON);
            }
            else {
                openhab.postCommand("A_Roller_Shades_3_Down", OnOffType.OFF);
                openhab.postCommand("A_Roller_Shades_4_Down", OnOffType.OFF);
            }
        }
        else {
            if( $statusUp == OnOffType.OFF && $statusDown == OnOffType.OFF) {
                openhab.postCommand("A_Roller_Shades_3_Down", OnOffType.ON);
                openhab.postCommand("A_Roller_Shades_4_Down", OnOffType.ON);
            }
            else {
                openhab.postCommand("A_Roller_Shades_3_Up", OnOffType.OFF);
                openhab.postCommand("A_Roller_Shades_4_Up", OnOffType.OFF);
            }
        }
end
*/